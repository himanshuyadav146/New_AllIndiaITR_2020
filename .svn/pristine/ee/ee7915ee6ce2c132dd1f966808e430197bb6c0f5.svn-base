package dell.com.allindiaitr.home

import android.app.Activity
import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.os.Build
import android.os.Bundle
import android.util.TypedValue
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.google.android.material.bottomnavigation.BottomNavigationMenuView
import dell.com.allindiaitr.Multilanguage.LanguageSettingActivity
import dell.com.allindiaitr.R
import dell.com.allindiaitr.interfaces.API_Interface
import dell.com.allindiaitr.login.LogInActivity
import dell.com.allindiaitr.models.NewItrBase
import dell.com.allindiaitr.utils.*
import kotlinx.android.synthetic.main.app_toolbar.*
import kotlinx.android.synthetic.main.activity_more.*

class MoreActivity : AppCompatActivity(), View.OnClickListener {

    lateinit var mContext: Context
    lateinit var apI_Interface : API_Interface
    private var appPreferences: AppPreferences? = null
    var newItrBase = NewItrBase.instance

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_more)

        mContext = this
        apI_Interface = APIClient().getClient().create(API_Interface::class.java)
        appPreferences = AppPreferences(mContext)
        toolbar_title.text = getString(R.string.more_title)

        if (appPreferences!!.userFirstName != null && appPreferences!!.userLastName != null)
            tv_username.text = appPreferences!!.userFirstName + " " + appPreferences!!.userLastName
        else
            tv_username.visibility = View.GONE

        if (appPreferences!!.emailAddress == "" || appPreferences!!.emailAddress == null)
            tv_email_id.visibility = View.GONE
        else
            tv_email_id.text = appPreferences!!.emailAddress!!.toString()

        tv_phone_no.text = "+91 " + appPreferences!!.mobileNumber!!.toString()

        blogs.setOnClickListener(this)
        faqs.setOnClickListener(this)
        share.setOnClickListener(this)
        rate_us.setOnClickListener(this)
        about_us.setOnClickListener(this)
        contact_us.setOnClickListener(this)
        log_out.setOnClickListener(this)
        lang.setOnClickListener(this)
        custom.setOnClickListener(this)

        bottomNavigationView.selectedItemId = R.id.navigation_more

        var menuView: BottomNavigationMenuView = bottomNavigationView.getChildAt(0) as BottomNavigationMenuView
        for (i in 0 until menuView.childCount){
            var iconView = menuView.getChildAt(i).findViewById<View>(R.id.icon)
            var layoutParams = iconView.layoutParams
            var displayMetrics = resources.displayMetrics
            layoutParams.height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 18F, displayMetrics).toInt()
            layoutParams.width = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 18F, displayMetrics).toInt()
            iconView.layoutParams = layoutParams
        }



        bottomNavigationView.setOnNavigationItemSelectedListener {
            if (!ConnectionDetector().isConnectingToInternet(mContext)){
                Toast.makeText(mContext, "Please Check Your Internet Connection", Toast.LENGTH_SHORT).show()
                return@setOnNavigationItemSelectedListener false
            }
            when (it.itemId) {
                R.id.navigation_home -> {
                    newItrBase.orderMode = "Orders"
                    val intent = Intent(mContext, DashboardActivity::class.java)
                    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)
                    startActivityForResult(intent, 0)
                    overridePendingTransition(0, 0)
                    finish()
                    return@setOnNavigationItemSelectedListener true
                }
                R.id.navigation_orders -> {
                    newItrBase.orderMode = "AllOrders"
                    val intent = Intent(mContext, AllOrdersActivity::class.java)
                    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)
                    startActivityForResult(intent, 0)
                    overridePendingTransition(0, 0)
                    finish()
                    return@setOnNavigationItemSelectedListener true
                }
                R.id.navigation_refer -> {
                    newItrBase.orderMode = "Orders"
                    val intent = Intent(mContext, ReferAndEarnActivity::class.java)
                    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)
                    startActivityForResult(intent, 0)
                    overridePendingTransition(0, 0)
                    finish()
                    return@setOnNavigationItemSelectedListener true
                }
                R.id.navigation_more-> return@setOnNavigationItemSelectedListener false
                else -> return@setOnNavigationItemSelectedListener false
            }
        }
    }





    override fun onBackPressed() {
        val intent = Intent(mContext, DashboardActivity::class.java)
        intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION)
        startActivityForResult(intent, 0)
        overridePendingTransition(0, 0)
        finish()
    }


    override fun attachBaseContext(newBase:Context?){
        mContext= newBase!!
        appPreferences= AppPreferences(newBase!!)
        val lang:String=appPreferences?.selectedLanguage!!
        //  setAppLocal(lang)
        super.attachBaseContext(MyContextWrapper.wrap(newBase,lang))

    }

    override fun onClick(v: View?) {
        if (v != null) {
            when(v.id){
                R.id.blogs -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        blogs.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        blogs.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, BlogActivity::class.java)
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.faqs -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        faqs.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        faqs.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, FAQActivity::class.java)
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.share -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        share.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        share.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val shareIntent = Intent(Intent.ACTION_SEND)
                    shareIntent.type = "text/plain"
                    shareIntent.putExtra(Intent.EXTRA_SUBJECT, "All India ITR - e-filing was never so easy")
                    var sAux = "I found it useful, hope youâ€™ll do too.\n\n"
                    sAux += "https://play.google.com/store/apps/details?id=dell.com.allindiaitr"
                    shareIntent.putExtra(Intent.EXTRA_TEXT, sAux)
                    mContext.startActivity(Intent.createChooser(shareIntent, "Share Via"))
                }
                R.id.custom -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        custom.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        custom.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, CustomPaymentActivity::class.java)
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.rate_us -> {
                    rate_us.setBackgroundColor(resources.getColor(R.color.lighter_grey))
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        faqs.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        faqs.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    AlertDialogueManager().showViewAlertDialog(
                        mContext,
                        "Would you mind stopping for a moment to rate us?"
                    )
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        rate_us.setBackgroundColor(mContext.getColor(R.color.white))
                    else
                        rate_us.setBackgroundColor(Color.parseColor("#FFFFFF"))
                }
                R.id.about_us -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        about_us.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        about_us.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, AboutUsActivity::class.java)
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.contact_us -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        contact_us.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        contact_us.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, ContactUsActivity::class.java)
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.log_out -> {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        log_out.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        log_out.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    appPreferences?.ClearPreferences()
                    val intent = Intent(mContext, LogInActivity::class.java)
                    (mContext as Activity).finish()
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
                R.id.lang->{
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                        lang.setBackgroundColor(mContext.getColor(R.color.lighter_grey))
                    else
                        lang.setBackgroundColor(Color.parseColor("#EFEFEF"))
                    val intent = Intent(mContext, LanguageSettingActivity::class.java)
                    (mContext as Activity).finish()
                    (mContext as Activity).overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                    startActivity(intent)
                }
            }
        }
    }

    override fun onResume() {
        super.onResume()
        bottomNavigationView.selectedItemId = R.id.navigation_more
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            blogs.setBackgroundColor(mContext.getColor(R.color.white))
            faqs.setBackgroundColor(mContext.getColor(R.color.white))
            share.setBackgroundColor(mContext.getColor(R.color.white))
            rate_us.setBackgroundColor(mContext.getColor(R.color.white))
            about_us.setBackgroundColor(mContext.getColor(R.color.white))
            contact_us.setBackgroundColor(mContext.getColor(R.color.white))
            log_out.setBackgroundColor(mContext.getColor(R.color.white))
            lang.setBackgroundColor(mContext.getColor(R.color.white))
            custom.setBackgroundColor(mContext.getColor(R.color.white))
        }
        else {
            blogs.setBackgroundColor(Color.parseColor("#FFFFFF"))
            faqs.setBackgroundColor(Color.parseColor("#FFFFFF"))
            share.setBackgroundColor(Color.parseColor("#FFFFFF"))
            rate_us.setBackgroundColor(Color.parseColor("#FFFFFF"))
            about_us.setBackgroundColor(Color.parseColor("#FFFFFF"))
            contact_us.setBackgroundColor(Color.parseColor("#FFFFFF"))
            log_out.setBackgroundColor(Color.parseColor("#FFFFFF"))
            lang.setBackgroundColor(Color.parseColor("#FFFFFF"))
            custom.setBackgroundColor(Color.parseColor("#FFFFFF"))
        }
    }

}
