package dell.com.allindiaitr.submitDocument

import android.app.Activity
import android.content.Context
import android.content.Intent
import android.content.res.ColorStateList
import android.graphics.Color
import android.os.Build
import android.os.Bundle
import android.view.MenuItem
import android.view.inputmethod.InputMethodManager
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.widget.Toolbar
import androidx.core.view.ViewCompat
import dell.com.allindiaitr.Enum.CommonVal
import dell.com.allindiaitr.R
import dell.com.allindiaitr.interfaces.API_Interface
import dell.com.allindiaitr.models.NewItrBase
import dell.com.allindiaitr.utils.*
import kotlinx.android.synthetic.main.activity_efiling_personal_info.*
import kotlinx.android.synthetic.main.activity_efiling_personal_info.toolbar
import kotlinx.android.synthetic.main.app_toolbar.*
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import java.lang.Exception

class EFilingPersonalInfoActivity : AppCompatActivity() {

    lateinit var apI_Interface : API_Interface
    lateinit var mContext: Context
    private var appPreferences: AppPreferences? = null
    var newItrBase = NewItrBase.instance
    var isNewUser = newItrBase.isNewUser
    lateinit var itrProcess: String
    var userAssessmentYearId: String? = null
    var assessmentYearId = "3DF22446-B42E-464B-8BB0-E810DE1E835E"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_efiling_personal_info)

        mContext = this
        apI_Interface = APIClient().getClient().create(API_Interface::class.java)
        appPreferences = AppPreferences(this)

        setSupportActionBar(toolbar as Toolbar?)
        supportActionBar!!.setDisplayShowTitleEnabled(false)
        supportActionBar!!.setDisplayHomeAsUpEnabled(true)
        toolbar_title.text =getString(R.string.personal_info)

        newItrBase.assessmentYearId = assessmentYearId
        userAssessmentYearId = newItrBase.selectedUser_userAssessmentYearUserID.toString()
        itrProcess = CommonVal.SubmitDocument.name

        setDataIntoFields()

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
            img_user.backgroundTintList = mContext.getColorStateList(R.color.colorPrimary)
        else
            ViewCompat.setBackgroundTintList(img_user, ColorStateList.valueOf(Color.rgb(0, 184, 148)))

        cont_button.setOnClickListener {
            if (Validation().isFirstNameValid(firstNameField.text.toString(), firstNameField) &&
                Validation().isLastNameValid(lastNameField.text.toString(), lastNameField) &&
                Validation().isMobileValid(mobileNumberField.text.toString(), mobileNumberField) &&
                Validation().isEmailValid(emailField.text.toString(), emailField) &&
                Validation().isPanValid(panNumberField.text.toString(), panNumberField) &&
                Validation().isDobValid(dobField.text.toString(), dobField)){

                newItrBase.firstName = firstNameField.text.toString()
                newItrBase.lastName = lastNameField.text.toString()
                newItrBase.phoneNumber = mobileNumberField.text.toString()
                newItrBase.email = emailField.text.toString()
                newItrBase.panNumber = panNumberField.text.toString()
                newItrBase.dateOfBirth = dobField.text.toString()
                if (isNewUser) {
                    userAssessmentYearId = null
                }
                if (ConnectionDetector().isConnectingToInternet(mContext))
                    postInformation()
                else
                    Toast.makeText(mContext, "Please Check Your Internet Connection", Toast.LENGTH_SHORT).show()
            }
        }

        dobField.setOnClickListener {
            DatePicker(mContext, dobField,18).datePickerDialog()
        }
    }



    override fun attachBaseContext(newBase:Context?){
        mContext= newBase!!
        appPreferences= AppPreferences(newBase!!)
        val lang:String=appPreferences?.selectedLanguage!!
        //  setAppLocal(lang)
        super.attachBaseContext(MyContextWrapper.wrap(newBase,lang))

    }


    private fun setDataIntoFields(){
        firstNameField.setText(newItrBase.firstName)
        lastNameField.setText(newItrBase.lastName)
        mobileNumberField.setText(newItrBase.phoneNumber)
        emailField.setText(newItrBase.email)
        panNumberField.setText(newItrBase.panNumber)
        dobField.text = newItrBase.dateOfBirth
        if (isNewUser) {
            mobileNumberField.setText(appPreferences!!.mobileNumber)
            emailField.setText(appPreferences!!.emailAddress)
        }
        else {
            mobileNumberField.setText(newItrBase.phoneNumber)
            emailField.setText(newItrBase.email)
        }
    }

    private fun postInformation(){
        var dialog = AlertDialogueManager(mContext,getString(R.string.dilog_pleasewait))
        var personalInformationModel = NewItrBase(firstNameField.text.toString(),
            "",
            lastNameField.text.toString(),
            panNumberField.text.toString(),
            "Android",
            dobField.text.toString(),
            appPreferences!!.parentId,
            newItrBase.isSalary,
            newItrBase.isBusiness,
            newItrBase.isHouseProperty,
            newItrBase.isCapitalGain,
            newItrBase.isOtherSource,
            newItrBase.isForeignIncome,
            userAssessmentYearId,
            itrProcess,
            emailField.text.toString(),
            mobileNumberField.text.toString(),
            newItrBase.assessmentYearId,
            appPreferences!!.deviceTokenId)

        val call = apI_Interface.postInformation(personalInformationModel)
        call.enqueue(object : Callback<NewItrBase> {

            override fun onResponse(
                call: Call<NewItrBase>?,
                response: Response<NewItrBase>?
            ) {
                try {
                    if (response!!.isSuccessful){
                        dialog.hideDialog()
                        newItrBase.selectedUserEmail = emailField.text.toString()
                        newItrBase.selectedUserMobile = mobileNumberField.text.toString()
                        newItrBase.userName = firstNameField.text.toString() + " " + lastNameField.text.toString()
                        newItrBase.selectedUserName= firstNameField.text.toString() + " " + lastNameField.text.toString()
                        if (appPreferences!!.emailAddress == "" || appPreferences!!.emailAddress == null)
                            appPreferences!!.emailAddress = emailField.text.toString()
                        if (appPreferences!!.userFirstName == null)
                            appPreferences!!.userFirstName = firstNameField.text.toString()
                        if (appPreferences!!.userLastName == null)
                            appPreferences!!.userLastName = lastNameField.text.toString()
                        newItrBase.selectedUser_userAssessmentYearUserID = response.body().UserAssestmentYearId?.takeUnless {it.isEmpty()} ?: ""
                        newItrBase.isNewUser = false
                        if (newItrBase.isSalary == "true") {
                            val intent = Intent(mContext, UploadForm16Activity::class.java)
//                            overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                            newItrBase.flagInfo = true
                            startActivity(intent)
                        }
                        else {
                            val intent = Intent(mContext, ImportantDetailsActivity::class.java)
                            overridePendingTransition(R.anim.slide_from_right, R.anim.slide_to_left)
                            newItrBase.flagInfo = true
                            startActivity(intent)
                        }
                    }
                    else {
                        dialog.hideDialog()
                        Toast.makeText(mContext, resources.getString(R.string.error_message), Toast.LENGTH_SHORT).show()
                    }
                }
                catch (e: Exception){
                    dialog.hideDialog()
                    Toast.makeText(mContext, resources.getString(R.string.error_message), Toast.LENGTH_SHORT).show()
                }
            }

            override fun onFailure(call: Call<NewItrBase>?, t: Throwable?) {
                dialog.hideDialog()
                Toast.makeText(mContext, resources.getString(R.string.error_message), Toast.LENGTH_SHORT).show()
            }

        })
    }

    override fun onOptionsItemSelected(item: MenuItem?): Boolean {
        var id = item!!.itemId
        if (id == android.R.id.home){
            val imm = mContext.getSystemService(Activity.INPUT_METHOD_SERVICE) as InputMethodManager
            imm.hideSoftInputFromWindow(currentFocus?.windowToken, 0)
            overridePendingTransition(R.anim.slide_from_left, R.anim.slide_to_right)
            finish()
        }
        return super.onOptionsItemSelected(item)
    }

    override fun onBackPressed() {
        super.onBackPressed()
        overridePendingTransition(R.anim.slide_from_left, R.anim.slide_to_right)
    }
}
